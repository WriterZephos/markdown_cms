<!--directory_fragment { "name": "Demo", "author": "Bryant Morrill" } -->
<!--fragment { "name": "Home", "author": "Bryant Morrill" } -->

# MarkdownRecord

Welcome to MarkdownRecord!

This document will walk you through the many powerful features of MarkdownRecord, and is created with MarkdownRecord itself. Hopefully, you are rendering this page locally from your own application, and will be able to get a peak under the hood to see how it all works by looking directly at the source markdown files.

If you haven't installed it locally yet, you can find instructions <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/installation"), "here") %>.

After following the installation guide, you should see a `markdown_record` folder inside your application root. This folder contains three subdirectories: `content`, `layouts` and `rendered`.

Feel free to poke around and explore the files in the directories mentioned above as you go through this guide. They will serve as a great reference to help make sense of the features and concepts described here.

## Workflow

The general workflow while using MarkdownRecord, once installed in your application, is as follows:

1. Write markdown content, using the Content DSL to define data within your markdown content.
2. Run the provided Thor task to render your markdown content into HTML and JSON.
3. Use the built in `MarkdownRecord::ContentFragment` model to directly reference your rendered content inside your application. 
4. Use the provided view helpers to link to the rendered content in your application's views, relying only on the controllers provided by the engine for serving the content if you wish.
5. Use model classes inheriting from `MarkdownRecord::Base` to interact with your html and json rendered content, taking advantage of the associations you can define manually as well a the automatic associations they have based on content location.

The next step is to read through the <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/rendering_basics"), "Rendering Basics") %> section to understand the basic rendering process of markdown source content into HTML and JSON.

The following links will take you to other sections of this guide. Each section builds upon the last, so it is recommended to read through them in order if you are new to MarkdownRecord.

- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/content_dsl"))%> 
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/routes")) %>
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/model_basics")) %>
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/content_frags")) %>
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/erb_syntax_and_view_helpers")) %>
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/layouts")) %>
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/custom_models_and_associations")) %>
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/controller_helpers")) %>
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/configuration")) %>
- <%= link_to_markdown_record(::MarkdownRecord::ContentFragment.find("content/sandbox")) %>

